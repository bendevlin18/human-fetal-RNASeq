yanchor = "bottom",
showarrow = FALSE
),
list(
x = 0.8,
y = 1,
text = "Male Placenta",
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE
))
ggplotly(splitCorrLayout) %>% layout(annotations = annotations)
} else {
goi_df_brain_t <- data.frame(t(goi_df_brain))
goi_df_placenta_t <- data.frame(t(goi_df_placenta))
## rownames(goi_df_brain_t)
goi_df_brain_t$SampleID <- rownames(goi_df_brain_t)
goi_df_placenta_t$SampleID <- rownames(goi_df_placenta_t)
for (row in rownames(goi_df_brain_t)) {
goi_df_brain_t$SampleID[goi_df_brain_t$SampleID == row] <- str_split(str_split(row, '_')[[1]][1], 'X')[[1]][2]
}
for (row in rownames(goi_df_placenta_t)) {
goi_df_placenta_t$SampleID[goi_df_placenta_t$SampleID == row] <- str_split(str_split(row, '_')[[1]][1], 'X')[[1]][2]
}
brain_merged <- merge(goi_df_brain_t, metadata, by.x="SampleID", by.y="sampleID")
brain_merged <- brain_merged %>%
rename(Brain = starts_with("X"),
Sex = sex,
Age = age,
Maternal_Triglycerides = trig,
Brain_5HT = brain_5ht,
Placenta_5HT = plac_5ht)
placenta_merged <- merge(goi_df_placenta_t, metadata, by.x="SampleID", by.y="sampleID")
placenta_merged <- placenta_merged %>%
rename(Placenta = starts_with("X"),
Sex = sex,
Age = age,
Maternal_Triglycerides = trig,
Brain_5HT = brain_5ht,
Placenta_5HT = plac_5ht)
brain_merged$Brain <- as.numeric(brain_merged$Brain)
placenta_merged$Placenta <- as.numeric(placenta_merged$Placenta)
male_brain_data <- subset(brain_merged, Sex == "Male")
male_plac_data <- subset(placenta_merged, Sex == "Male")
female_brain_data <- subset(brain_merged, Sex == "Female")
female_plac_data <- subset(placenta_merged, Sex == "Female")
malebrainStat <- cor.test(male_brain_data$Maternal_Triglycerides, male_brain_data$Brain)
malebrainpval <- round(malebrainStat$p.value,3)
malebrainpval <- paste("p=",malebrainpval)
malebrainR <- round(malebrainStat$estimate, 2)
malebrainR <- as.numeric(malebrainR)
malebrainR <- paste("R=", malebrainR)
malegraphstat <- as.character(paste(malebrainR, malebrainpval))
malebrain_TPM_max = max(male_brain_data$Brain)
femalebrainStat <- cor.test(female_brain_data$Maternal_Triglycerides, female_brain_data$Brain)
femalebrainpval <- round(femalebrainStat$p.value,3)
femalebrainpval <- paste("p=",femalebrainpval)
femalebrainR <- round(femalebrainStat$estimate, 2)
femalebrainR <- as.numeric(femalebrainR)
femalebrainR <- paste("R=", femalebrainR)
femalegraphstat <- as.character(paste(femalebrainR, femalebrainpval))
femalebrain_TPM_max = max(female_brain_data$Brain)
malePlacentaStat <- cor.test(male_plac_data$Maternal_Triglycerides, male_plac_data$Placenta)
malePlacentapval <- round(malePlacentaStat$p.value,3)
malePlacentapval <- paste("p=",malePlacentapval)
malePlacentaR <- round(malePlacentaStat$estimate, 2)
malePlacentaR <- as.numeric(malePlacentaR)
malePlacentaR <- paste("R=", malePlacentaR)
malegraphstat <- as.character(paste(malePlacentaR, malePlacentapval))
malePlacenta_TPM_max = max(male_plac_data$Placenta)
femalePlacentaStat <- cor.test(female_plac_data$Maternal_Triglycerides, female_plac_data$Placenta)
femalePlacentapval <- round(femalePlacentaStat$p.value,3)
femalePlacentapval <- paste("p=",femalePlacentapval)
femalePlacentaR <- round(femalePlacentaStat$estimate, 2)
femalePlacentaR <- as.numeric(femalePlacentaR)
femalePlacentaR <- paste("R=", femalePlacentaR)
femalegraphstat <- as.character(paste(femalePlacentaR, femalePlacentapval))
femalePlacenta_TPM_max = max(female_plac_data$Placenta)
Male_Brain_Corr <- ggplotly(ggplot(male_brain_data, aes(x = Maternal_Triglycerides, y = Brain))+
geom_ribbon(stat="smooth", method = "lm", se=TRUE,
fill = "lightcyan3", alpha=0.5)+
geom_point(color="turquoise4", alpha=0.5)+
geom_line(stat="smooth", method="lm",color = "lightcyan4",
size=.5)+
ggtitle(label = gene_of_interest)+
geom_text(x=.8, y=malebrain_TPM_max, aes(label=paste(malebrainR,",",malebrainpval)), size=3)+
corr_plot_settings)
Female_Brain_Corr <- ggplotly(ggplot(female_brain_data, aes(x = Maternal_Triglycerides, y = Brain))+
geom_ribbon(stat="smooth", method = "lm", se=TRUE,
fill = "mistyrose3", alpha=0.5)+
geom_point(color="rosybrown3", alpha=0.5)+
geom_line(stat="smooth", method="lm",color = "rosybrown",
size=.5)+
ggtitle(label = gene_of_interest)+
geom_text(x=1.1, y=femalebrain_TPM_max, aes(label=paste(femalebrainR,",",femalebrainpval)), size=3)+
corr_plot_settings)
Male_Plac_Corr <- ggplotly(ggplot(male_plac_data, aes(x = Maternal_Triglycerides, y = Placenta))+
geom_ribbon(stat="smooth", method = "lm", se=TRUE,
fill = "lightcyan3", alpha=0.5)+
geom_point(color="turquoise4", alpha=0.5)+
geom_line(stat="smooth", method="lm",color = "lightcyan4",
size=.5)+
ggtitle(label = gene_of_interest)+
geom_text(x=.8, y=malePlacenta_TPM_max, aes(label=paste(malePlacentaR,",",malePlacentapval)), size=3)+
corr_plot_settings)
Female_Plac_Corr <- ggplotly(ggplot(female_plac_data, aes(x = Maternal_Triglycerides, y = Placenta))+
geom_ribbon(stat="smooth", method = "lm", se=TRUE,
fill = "mistyrose3", alpha=0.5)+
geom_point(color="rosybrown3", alpha=0.5)+
geom_line(stat="smooth", method="lm",color = "rosybrown",
size=.5)+
ggtitle(label = gene_of_interest)+
geom_text(x=1.1, y=femalePlacenta_TPM_max, aes(label=paste(femalePlacentaR,",",femalePlacentapval)), size=3)+
corr_plot_settings)
splitCorrLayout <- subplot(Female_Plac_Corr, Male_Plac_Corr, Female_Brain_Corr, Male_Brain_Corr, nrows = 2, titleY=TRUE, titleX = TRUE,
margin=0.1)
annotations = list(
list(
x = 0.2,
y = 1.0,
text = "Female Placenta",
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE
),
list(
x = 0.8,
y = 1,
text = "Male Placenta",
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE
),
list(
x = 0.2,
y = 0.4,
text = "Female Brain",
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE
),
list(
x = 0.8,
y = 0.4,
text = "Male Brain",
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE
))
ggplotly(splitCorrLayout) %>% layout(annotations = annotations)
}
rm(list = ls())
library(ggplot2)
library(dplyr)
library(ggpubr)
library(tidyverse)
library(plotly)
library(glue)
corr_plot_settings <- list(
xlab('Log Maternal Triglycerides (mg/dL)'),
ylab('TPM (Transcripts per million)'),
theme_classic(),
theme(rect = element_rect(fill = 'transparent'),
text = element_text(size = 13),
plot.title = element_text(hjust = 0.5, face = "italic", size=11),
plot.margin = margin(t=.5, r=1, b=0, l=1, unit="cm"),
axis.line = element_line(size = .75),
axis.ticks = element_line(size = .6),
axis.text.x = element_text(hjust = 1),
legend.title = element_blank(),
panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.background = element_rect(color = NA, col = 0),
axis.title.y = element_text(margin = margin(t = 0, r = 0, b = 0, l = 0), size=10),
axis.title.x = element_text(margin = margin(t = 0, r = 0, b = 0, l = 0), size = 10),
strip.background = element_rect(color="transparent", fill="transparent", linetype="solid")))
setwd('/Users/alexis/Library/CloudStorage/OneDrive-DukeUniversity/alexis_sequencing/shiny_app')
metadata <- read.csv('human_seq_metadata.csv')
for (sample in metadata$sampleID) {
metadata$sampleID[metadata$sampleID == sample] <- str_split(sample, "-")[[1]][2]
}
brain_tpm_df <- read.csv('brain_tpm_w_exclusions.csv')
placenta_tpm_df <- read.csv('placenta_tpm_w_exclusions.csv')
gene_of_interest <- 'ADRB2'
goi_df_brain <- brain_tpm_df[brain_tpm_df$hgnc_symbol == gene_of_interest, ]
goi_df_placenta <- placenta_tpm_df[placenta_tpm_df$hgnc_symbol == gene_of_interest, ]
if (dim(goi_df_placenta)[1]==0 && dim(goi_df_brain)[1]==0) {
print("This gene is not present in the dataset")
rm(goi_df_placenta)
rm(goi_df_brain)
}else if (dim(goi_df_placenta)[1]==0) {
print("This gene is not present in the placenta")
rm(goi_df_placenta)
goi_df_brain_t <- data.frame(t(goi_df_brain))
goi_df_brain_t$SampleID <- rownames(goi_df_brain_t)
for (row in rownames(goi_df_brain_t)) {
goi_df_brain_t$SampleID[goi_df_brain_t$SampleID == row] <- str_split(str_split(row, '_')[[1]][1], 'X')[[1]][2]
}
brain_merged <- merge(goi_df_brain_t, metadata, by.x="SampleID", by.y="sampleID")
brain_merged <- brain_merged %>%
rename(Brain = starts_with("X"),
Sex = sex,
Age = age,
Maternal_Triglycerides = trig,
Brain_5HT = brain_5ht,
Placenta_5HT = plac_5ht)
brain_merged$Brain <- as.numeric(brain_merged$Brain)
male_brain_data <- subset(brain_merged, Sex == "Male")
female_brain_data <- subset(brain_merged, Sex == "Female")
malebrainStat <- cor.test(male_brain_data$Maternal_Triglycerides, male_brain_data$Brain)
malebrainpval <- round(malebrainStat$p.value,3)
malebrainpval <- paste("p=",malebrainpval)
malebrainR <- round(malebrainStat$estimate, 2)
malebrainR <- as.numeric(malebrainR)
malebrainR <- paste("R=", malebrainR)
malegraphstat <- as.character(paste(malebrainR, malebrainpval))
malebrain_TPM_max = max(male_brain_data$Brain)
femalebrainStat <- cor.test(female_brain_data$Maternal_Triglycerides, female_brain_data$Brain)
femalebrainpval <- round(femalebrainStat$p.value,3)
femalebrainpval <- paste("p=",femalebrainpval)
femalebrainR <- round(femalebrainStat$estimate, 2)
femalebrainR <- as.numeric(femalebrainR)
femalebrainR <- paste("R=", femalebrainR)
femalegraphstat <- as.character(paste(femalebrainR, femalebrainpval))
femalebrain_TPM_max = max(female_brain_data$Brain)
Male_Brain_Corr <- ggplotly(ggplot(male_brain_data, aes(x = Maternal_Triglycerides, y = Brain))+
geom_ribbon(stat="smooth", method = "lm", se=TRUE,
fill = "lightcyan3", alpha=0.5)+
geom_point(color="turquoise4", alpha=0.5)+
geom_line(stat="smooth", method="lm",color = "lightcyan4",
size=.5)+
ggtitle(label = gene_of_interest)+
geom_text(x=.8, y=malebrain_TPM_max, aes(label=paste(malebrainR,",",malebrainpval)), size=3)+
corr_plot_settings)
Female_Brain_Corr <- ggplotly(ggplot(female_brain_data, aes(x = Maternal_Triglycerides, y = Brain))+
geom_ribbon(stat="smooth", method = "lm", se=TRUE,
fill = "mistyrose3", alpha=0.5)+
geom_point(color="rosybrown3", alpha=0.5)+
geom_line(stat="smooth", method="lm",color = "rosybrown",
size=.5)+
ggtitle(label = gene_of_interest)+
geom_text(x=1.1, y=femalebrain_TPM_max, aes(label=paste(femalebrainR,",",femalebrainpval)), size=3)+
corr_plot_settings)
splitCorrLayout <- subplot(Female_Brain_Corr, Male_Brain_Corr, titleY=TRUE, titleX = TRUE,
margin=0.1)
annotations = list(
list(
x = 0.2,
y = 1.0,
text = "Female Brain",
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE
),
list(
x = 0.8,
y = 1,
text = "Male Brain",
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE
))
ggplotly(splitCorrLayout) %>% layout(annotations = annotations)
} else if (dim(goi_df_brain)[1]==0) {
print("This gene is not present in the brain")
rm(goi_df_brain)
goi_df_placenta_t <- data.frame(t(goi_df_placenta))
goi_df_placenta_t$SampleID <- rownames(goi_df_placenta_t)
for (row in rownames(goi_df_placenta_t)) {
goi_df_placenta_t$SampleID[goi_df_placenta_t$SampleID == row] <- str_split(str_split(row, '_')[[1]][1], 'X')[[1]][2]
}
placenta_merged <- merge(goi_df_placenta_t, metadata, by.x="SampleID", by.y="sampleID")
placenta_merged <- placenta_merged %>%
rename(Placenta = starts_with("X"),
Sex = sex,
Age = age,
Maternal_Triglycerides = trig,
Brain_5HT = brain_5ht,
Placenta_5HT = plac_5ht)
placenta_merged$Placenta <- as.numeric(placenta_merged$Placenta)
male_plac_data <- subset(placenta_merged, Sex == "Male")
female_plac_data <- subset(placenta_merged, Sex == "Female")
malePlacentaStat <- cor.test(male_plac_data$Maternal_Triglycerides, male_plac_data$Placenta)
malePlacentapval <- round(malePlacentaStat$p.value,3)
malePlacentapval <- paste("p=",malePlacentapval)
malePlacentaR <- round(malePlacentaStat$estimate, 2)
malePlacentaR <- as.numeric(malePlacentaR)
malePlacentaR <- paste("R=", malePlacentaR)
malegraphstat <- as.character(paste(malePlacentaR, malePlacentapval))
malePlacenta_TPM_max = max(male_plac_data$Placenta)
femalePlacentaStat <- cor.test(female_plac_data$Maternal_Triglycerides, female_plac_data$Placenta)
femalePlacentapval <- round(femalePlacentaStat$p.value,3)
femalePlacentapval <- paste("p=",femalePlacentapval)
femalePlacentaR <- round(femalePlacentaStat$estimate, 2)
femalePlacentaR <- as.numeric(femalePlacentaR)
femalePlacentaR <- paste("R=", femalePlacentaR)
femalegraphstat <- as.character(paste(femalePlacentaR, femalePlacentapval))
femalePlacenta_TPM_max = max(female_plac_data$Placenta)
Male_Plac_Corr <- ggplotly(ggplot(male_plac_data, aes(x = Maternal_Triglycerides, y = Placenta))+
geom_ribbon(stat="smooth", method = "lm", se=TRUE,
fill = "lightcyan3", alpha=0.5)+
geom_point(color="turquoise4", alpha=0.5)+
geom_line(stat="smooth", method="lm",color = "lightcyan4",
size=.5)+
ggtitle(label = gene_of_interest)+
geom_text(x=.8, y=malePlacenta_TPM_max, aes(label=paste(malePlacentaR,",",malePlacentapval)), size=3)+
corr_plot_settings)
Female_Plac_Corr <- ggplotly(ggplot(female_plac_data, aes(x = Maternal_Triglycerides, y = Placenta))+
geom_ribbon(stat="smooth", method = "lm", se=TRUE,
fill = "mistyrose3", alpha=0.5)+
geom_point(color="rosybrown3", alpha=0.5)+
geom_line(stat="smooth", method="lm",color = "rosybrown",
size=.5)+
ggtitle(label = gene_of_interest)+
geom_text(x=1.1, y=femalePlacenta_TPM_max, aes(label=paste(femalePlacentaR,",",femalePlacentapval)), size=3)+
corr_plot_settings)
splitCorrLayout <- subplot(Female_Plac_Corr, Male_Plac_Corr, titleY=TRUE, titleX = TRUE,
margin = .1)
annotations = list(
list(
x = 0.2,
y = 1.0,
text = "Female Placenta",
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE
),
list(
x = 0.8,
y = 1,
text = "Male Placenta",
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE
))
ggplotly(splitCorrLayout) %>% layout(annotations = annotations)
} else {
goi_df_brain_t <- data.frame(t(goi_df_brain))
goi_df_placenta_t <- data.frame(t(goi_df_placenta))
## rownames(goi_df_brain_t)
goi_df_brain_t$SampleID <- rownames(goi_df_brain_t)
goi_df_placenta_t$SampleID <- rownames(goi_df_placenta_t)
for (row in rownames(goi_df_brain_t)) {
goi_df_brain_t$SampleID[goi_df_brain_t$SampleID == row] <- str_split(str_split(row, '_')[[1]][1], 'X')[[1]][2]
}
for (row in rownames(goi_df_placenta_t)) {
goi_df_placenta_t$SampleID[goi_df_placenta_t$SampleID == row] <- str_split(str_split(row, '_')[[1]][1], 'X')[[1]][2]
}
brain_merged <- merge(goi_df_brain_t, metadata, by.x="SampleID", by.y="sampleID")
brain_merged <- brain_merged %>%
rename(Brain = starts_with("X"),
Sex = sex,
Age = age,
Maternal_Triglycerides = trig,
Brain_5HT = brain_5ht,
Placenta_5HT = plac_5ht)
placenta_merged <- merge(goi_df_placenta_t, metadata, by.x="SampleID", by.y="sampleID")
placenta_merged <- placenta_merged %>%
rename(Placenta = starts_with("X"),
Sex = sex,
Age = age,
Maternal_Triglycerides = trig,
Brain_5HT = brain_5ht,
Placenta_5HT = plac_5ht)
brain_merged$Brain <- as.numeric(brain_merged$Brain)
placenta_merged$Placenta <- as.numeric(placenta_merged$Placenta)
male_brain_data <- subset(brain_merged, Sex == "Male")
male_plac_data <- subset(placenta_merged, Sex == "Male")
female_brain_data <- subset(brain_merged, Sex == "Female")
female_plac_data <- subset(placenta_merged, Sex == "Female")
malebrainStat <- cor.test(male_brain_data$Maternal_Triglycerides, male_brain_data$Brain)
malebrainpval <- round(malebrainStat$p.value,3)
malebrainpval <- paste("p=",malebrainpval)
malebrainR <- round(malebrainStat$estimate, 2)
malebrainR <- as.numeric(malebrainR)
malebrainR <- paste("R=", malebrainR)
malegraphstat <- as.character(paste(malebrainR, malebrainpval))
malebrain_TPM_max = max(male_brain_data$Brain)
femalebrainStat <- cor.test(female_brain_data$Maternal_Triglycerides, female_brain_data$Brain)
femalebrainpval <- round(femalebrainStat$p.value,3)
femalebrainpval <- paste("p=",femalebrainpval)
femalebrainR <- round(femalebrainStat$estimate, 2)
femalebrainR <- as.numeric(femalebrainR)
femalebrainR <- paste("R=", femalebrainR)
femalegraphstat <- as.character(paste(femalebrainR, femalebrainpval))
femalebrain_TPM_max = max(female_brain_data$Brain)
malePlacentaStat <- cor.test(male_plac_data$Maternal_Triglycerides, male_plac_data$Placenta)
malePlacentapval <- round(malePlacentaStat$p.value,3)
malePlacentapval <- paste("p=",malePlacentapval)
malePlacentaR <- round(malePlacentaStat$estimate, 2)
malePlacentaR <- as.numeric(malePlacentaR)
malePlacentaR <- paste("R=", malePlacentaR)
malegraphstat <- as.character(paste(malePlacentaR, malePlacentapval))
malePlacenta_TPM_max = max(male_plac_data$Placenta)
femalePlacentaStat <- cor.test(female_plac_data$Maternal_Triglycerides, female_plac_data$Placenta)
femalePlacentapval <- round(femalePlacentaStat$p.value,3)
femalePlacentapval <- paste("p=",femalePlacentapval)
femalePlacentaR <- round(femalePlacentaStat$estimate, 2)
femalePlacentaR <- as.numeric(femalePlacentaR)
femalePlacentaR <- paste("R=", femalePlacentaR)
femalegraphstat <- as.character(paste(femalePlacentaR, femalePlacentapval))
femalePlacenta_TPM_max = max(female_plac_data$Placenta)
Male_Brain_Corr <- ggplotly(ggplot(male_brain_data, aes(x = Maternal_Triglycerides, y = Brain))+
geom_ribbon(stat="smooth", method = "lm", se=TRUE,
fill = "lightcyan3", alpha=0.5)+
geom_point(color="turquoise4", alpha=0.5)+
geom_line(stat="smooth", method="lm",color = "lightcyan4",
size=.5)+
ggtitle(label = gene_of_interest)+
geom_text(x=.8, y=malebrain_TPM_max, aes(label=paste(malebrainR,",",malebrainpval)), size=3)+
corr_plot_settings)
Female_Brain_Corr <- ggplotly(ggplot(female_brain_data, aes(x = Maternal_Triglycerides, y = Brain))+
geom_ribbon(stat="smooth", method = "lm", se=TRUE,
fill = "mistyrose3", alpha=0.5)+
geom_point(color="rosybrown3", alpha=0.5)+
geom_line(stat="smooth", method="lm",color = "rosybrown",
size=.5)+
ggtitle(label = gene_of_interest)+
geom_text(x=1.1, y=femalebrain_TPM_max, aes(label=paste(femalebrainR,",",femalebrainpval)), size=3)+
corr_plot_settings)
Male_Plac_Corr <- ggplotly(ggplot(male_plac_data, aes(x = Maternal_Triglycerides, y = Placenta))+
geom_ribbon(stat="smooth", method = "lm", se=TRUE,
fill = "lightcyan3", alpha=0.5)+
geom_point(color="turquoise4", alpha=0.5)+
geom_line(stat="smooth", method="lm",color = "lightcyan4",
size=.5)+
ggtitle(label = gene_of_interest)+
geom_text(x=.8, y=malePlacenta_TPM_max, aes(label=paste(malePlacentaR,",",malePlacentapval)), size=3)+
corr_plot_settings)
Female_Plac_Corr <- ggplotly(ggplot(female_plac_data, aes(x = Maternal_Triglycerides, y = Placenta))+
geom_ribbon(stat="smooth", method = "lm", se=TRUE,
fill = "mistyrose3", alpha=0.5)+
geom_point(color="rosybrown3", alpha=0.5)+
geom_line(stat="smooth", method="lm",color = "rosybrown",
size=.5)+
ggtitle(label = gene_of_interest)+
geom_text(x=1.1, y=femalePlacenta_TPM_max, aes(label=paste(femalePlacentaR,",",femalePlacentapval)), size=3)+
corr_plot_settings)
splitCorrLayout <- subplot(Female_Plac_Corr, Male_Plac_Corr, Female_Brain_Corr, Male_Brain_Corr, nrows = 2, titleY=TRUE, titleX = TRUE,
margin=0.2)
annotations = list(
list(
x = 0.2,
y = 1.0,
text = "Female Placenta",
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE
),
list(
x = 0.8,
y = 1,
text = "Male Placenta",
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE
),
list(
x = 0.2,
y = 0.4,
text = "Female Brain",
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE
),
list(
x = 0.8,
y = 0.4,
text = "Male Brain",
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE
))
ggplotly(splitCorrLayout) %>% layout(annotations = annotations)
}
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
